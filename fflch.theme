<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Component\Utility\SafeMarkup;
use Drupal\Component\Utility\Xss;
use Drupal\Core\Template\Attribute;
use Drupal\file\Plugin\Core\Entity\FileInterface;
use Drupal\Component\Utility\Unicode;
use Drupal\Core\Path\AliasManager;
use Drupal\file\Entity\File;


define('THEME_PATH_FFLCH', base_path() . \Drupal::service('extension.path.resolver')->getPath('theme', 'fflch'));

function fflch_preprocess_page(&$vars) {

  // Load the site name out of configuration.
  $config = \Drupal::config('system.site');
  $vars['site_name'] = $config->get('name');
  $vars['site_slogan'] = $config->get('slogan');

  // Add information about the number of sidebars.
  if (!empty($vars['page']['sidebar_first']) && !empty($vars['page']['sidebar_second'])) {
    $vars['contentlayout'] = 'col-md-6 col-sm-6';
    $vars['sidebarfirst'] = 'col-md-3 col-sm-3';
    $vars['sidebarsecond'] = 'col-md-3 col-sm-3';
  }

  elseif (!empty($vars['page']['sidebar_first']) && !empty($vars['page']['sidebar_second_second'])) {
    $vars['contentlayout'] = 'col-md-6 col-sm-6';
    $vars['sidebarfirst'] = 'col-md-3 col-sm-3';
    $vars['sidebarsecondsecond'] = 'col-md-3 col-sm-3';
  }

  // Essa condição não está funcionando, quando há 3 colunas de blocos
  elseif (!empty($vars['page']['sidebar_first']) && !empty($vars['page']['sidebar_second_second']) && !empty($vars['page']['sidebar_second'])) {
    $vars['contentlayout'] = 'col-md-6 col-sm-6';
    $vars['sidebarfirst'] = 'col-md-2 col-sm-2';
    $vars['sidebarsecondsecond'] = 'col-md-2 col-sm-2';
    $vars['sidebarsecond'] = 'col-md-2 col-sm-2';
  }

  elseif (!empty($vars['page']['sidebar_second_second']) && !empty($vars['page']['sidebar_second'])) {
    $vars['contentlayout'] = 'col-md-6 col-sm-6';
    $vars['sidebarsecondsecond'] = 'col-md-3 col-sm-3';
    $vars['sidebarsecond'] = 'col-md-3 col-sm-3';
  }

  elseif (!empty($vars['page']['sidebar_first'])) {
    $vars['contentlayout'] = 'col-md-9 col-sm-9 ';
    $vars['sidebarfirst'] = 'col-md-3 col-sm-3';
  }

  elseif (!empty($vars['page']['sidebar_second'])) {
    $vars['contentlayout'] = 'col-md-9 sol-sm-9 ';
    $vars['sidebarsecond'] = 'col-md-3 col-sm-3';
  }

  elseif (!empty($vars['page']['sidebar_second_second'])) {
    $vars['contentlayout'] = 'col-md-9 sol-sm-9 ';
    $vars['sidebarsecondsecond'] = 'col-md-3 col-sm-3';
  }

  else {
    $vars['contentlayout'] = 'col-lg-12 centered ';
  }

  $show_slideshow = theme_get_setting('slideshow_display', 'fflch');
  $current_path = \Drupal::service('path.current')->getPath();
  #$path_alias = mb_strtolower(\Drupal::service('path.alias_manager')->getAliasByPath($current_path));
  $path_alias = mb_strtolower(\Drupal::service('path_alias.manager')->getAliasByPath($current_path));
  if (theme_get_setting('slideshow_visiblity', 'fflch')) {
    $visiblity = \Drupal::service('path.matcher')->matchPath($path_alias, theme_get_setting('slideshow_visiblity', 'fflch'));
  }

  $slideshow_path = isset($visiblity) ? $visiblity : $vars['is_front'];

  if ($slideshow_path && $show_slideshow) {
    $vars['slider'] = array();
    for ($i = 1; $i <= theme_get_setting('slideshow_count', 'fflch'); $i++) {
      $fid = theme_get_setting("slide_image_{$i}", "fflch");
      if (!empty($fid)) {
        $file = \Drupal\file\Entity\File::load($fid[0]);
        $uri = $file->getFileUri();
        $image_path = file_create_url($uri);
      }
      else {
        $image_path = THEME_PATH_FFLCH . "/images/slide-{$i}.jpg";
      }
      $vars['slider'][] = array(
        'name' => !empty($fid) ? $file->getFilename() : "slider-{$i}",
        'url' => theme_get_setting("slide_url_{$i}", "fflch"),
        'src' => $image_path,
        'description' => theme_get_setting("slide_description_{$i}", "fflch"),
      );
    }
  }

}

function fflch_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {

  $form['fflch_settings'] = array(
    '#type' => 'details',
    '#title' => t('Configurações'),
    '#open' => FALSE,
  );

  $form['fflch_settings'] = array(
    '#type' => 'details',
    '#title' => t('Configurações Slideshow'),
    '#open' => TRUE,
  );

  $form['fflch_settings']['slideshow']['slideshow_display'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show slideshow'),
    '#default_value' => theme_get_setting('slideshow_display', 'fflch'),
    '#description'   => t("Check this option to show Slideshow in front page. Uncheck to hide."),
  );

  $form['fflch_settings']['slideshow']['slideshow_count'] = array(
    '#type' => 'select',
    '#title' => t('SlideShow Count'),
    '#default_value' => theme_get_setting('slideshow_count', 'fflch'),
    '#options' => array(1 => 1, 2 => 2, 3 => 3, 4 => 4, 5 => 5, 6 => 6, 7 => 7, 8 => 8, 9 => 9, 10 => 10),
    '#description'   => t("Mention total number of slides in the slideshow."),
  );

  $form['fflch_settings']['slideshow']['slideshow_animation'] = array(
    '#type' => 'select',
    '#title' => t('Animation'),
    '#default_value' => theme_get_setting('slideshow_animation', 'fflch'),
    '#options' => array('fade' => 'FADE', 'slide' => 'SLIDE'),
    '#description'   => t('Controls the animation type, "fade" or "slide".'),
  );

  $form['fflch_settings']['slideshow']['slideshow_slide_speed'] = array(
    '#type' => 'textfield',
    '#title' => t('SlideShow Speed'),
    '#default_value' => theme_get_setting('slideshow_slide_speed', 'fflch'),
    '#description'   => t("Number Set the speed of the slideshow cycling, in milliseconds. default : 7000"),
  );

  $form['fflch_settings']['slideshow']['slideshow_animation_speed'] = array(
    '#type' => 'textfield',
    '#title' => t('Animation Speed'),
    '#default_value' => theme_get_setting('slideshow_animation_speed', 'fflch'),
    '#description'   => t("Number Set the speed of animations, in milliseconds. default : 600"),
  );

  $form['fflch_settings']['slideshow']['slide'] = array(
    '#markup' => t('You can change the title, url and image of each slide in the following Slide Setting fieldsets.'),
  );

  $form['fflch_settings']['slideshow']['slideshow_visiblity'] = array(
    '#type' => 'textarea',
    '#title' => t('Visibility'),
    '#default_value' => theme_get_setting('slideshow_visiblity', 'fflch'),
    '#description'   => t("Specify pages by using their paths. Enter one path per line. The '*' character is a wildcard. Example paths are /user for the current user's page and /user/* for every user page. front is the front page."),
  );


  for ($i = 1; $i <= theme_get_setting('slideshow_count', 'fflch'); $i++) {
    $form['fflch_settings']['slideshow']["slide{$i}"] = array(
      '#type' => 'details',
      '#title' => t("Slide {$i}"),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );
    $form['fflch_settings']['slideshow']["slide{$i}"]["slide_description_{$i}"] = array(
      '#type' => 'textarea',
      '#title' => t('Slide '.$i.' Title'),
      '#default_value' => theme_get_setting("slide_description_{$i}", "fflch"),
    );
    $form['fflch_settings']['slideshow']["slide{$i}"]["slide_image_{$i}"] = array(
      '#type' => 'managed_file',
      '#title' => t('Slide '.$i.' Image'),
      '#description' => t('Use same size for all the slideshow images(Recommented size : 930 x 320).'),
      '#default_value' => theme_get_setting("slide_image_{$i}", "fflch"),
      '#upload_location' => 'public://',
    );
    $form['fflch_settings']['slideshow']["slide{$i}"]["slide_url_{$i}"] = array(
      '#type' => 'textfield',
      '#title' => t('Slide '.$i.' URL'),
      '#default_value' => theme_get_setting("slide_url_{$i}", "fflch"),
    );
  }


  $filename = \Drupal::service('extension.path.resolver')->getPath('theme', 'fflch') . '/fflch.theme';
  $form_state->addBuildInfo('files', array($filename));

  $form['#submit'][] = 'fflch_settings_form_submit';

}

function fflch_settings_form_submit(&$form, FormStateInterface $form_state) {
  $account = \Drupal::currentUser();
  $values = $form_state->getValues();
  for ($i = 0; $i <= theme_get_setting('slideshow_count', 'fflch'); $i++) {
    if (isset($values["slide_image_{$i}"]) && !empty($values["slide_image_{$i}"])) {
      // Load the file via file.fid.
      if ($file = File::load($values["slide_image_{$i}"][0])) {
        // Change status to permanent.
        $file->setPermanent();
        $file->save();
        $file_usage = \Drupal::service('file.usage');
        $file_usage->add($file, 'user', 'user', $account->id());
      }
    }
  }
}

/**
 * https://drupal.stackexchange.com/questions/250502/render-a-menu-differently-based-on-region
 * You can add template suggestions. Because menus don't know their region,
 * you first have to add a helper variable in block preprocessing:
 **/
function fflch_preprocess_block(array &$variables) {
  if (!empty($variables['elements']['#id'])) {
    $variables['content']['#attributes']['data-block-id'] = $variables['elements']['#id'];
  }
}

/**
 * https://drupal.stackexchange.com/questions/250502/render-a-menu-differently-based-on-region
 * After that you can alter the menu template suggestions
 * Now you can use twig templates like menu__REGIONNAME.html.twig 
 * for all menus in a given region.
 **/
function fflch_theme_suggestions_menu_alter(array &$suggestions, array $variables) {
  if (isset($variables['attributes']['data-block-id'])) {
    $block = \Drupal\block\Entity\Block::load($variables['attributes']['data-block-id']);
    if ($block) {
      array_unshift($suggestions, 'menu__' . str_replace('-', '_', $block->getRegion()));
    }
  }
}



